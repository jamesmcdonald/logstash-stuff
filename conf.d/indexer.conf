filter {
    if [type] == "apache.json" {
        mutate { 
            add_field => [
                "request_uri", "%{request}"
            ]
        }

        mutate { 
            split => ["request_uri", "/"]
        }

        if [request_uri][2] {
            mutate { 
                add_field => [
                    "customer_name", "%{[request_uri][1]}"
                ]
            }
        }

        if [customer_name] {
            ############################
            # customer name specific
            mutate {
                lowercase => [
                    "customer_name"
                ]
                gsub => [
                    "customer_name", "[-]", "_"
                ]
            }
            ############################

            ############################
            # request_uri specific
            ruby {
                code => "event['request_uri'].delete_at 1"
            }

            mutate { 
                join => [
                    "request_uri", "/"
                ]
            }

            #mutate { 
            #    add_field => [
            #        "request_uri_3", "%{request_uri}"
            #    ]
            #}
            ############################

        } else {
            mutate { 
                remove_field => [
                    "request_uri"
                ]
            }
        }

        ############################
        #Browser info
        if [agent] {
            useragent {
                source => "agent"
                target => "browser"
            }

            mutate {
                gsub => [
                    "[browser][name]", " ", "_"
                ]
                add_field => [
                    "[browser][id]", "%{[browser][name]}_%{[browser][major]}",
                    "[browser][family]", "%{[browser][name]}"
                ]
            }
          
            if (![browser][major]) {
                mutate {
                    replace  => [
                        "[browser][id]", "%{[browser][name]}"
                    ]
                }
            }

            mutate {
                lowercase => [
                    "[browser][id]",
                    "[browser][family]"
                ]
            }
        }
        ############################

        ############################
        #Location
        #geoip {
        #    source => "clientip"
        #    target => "location"
        #}
        ############################
    }
}

output {
    #stdout {
    #    codec => rubydebug
    #}
    elasticsearch {
        host => "127.0.0.1"
        cluster => "logstash.fronter.net"
    }
}
