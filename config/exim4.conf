filter {
    if [type] == "exim4-log" {
        if "Message is frozen" in [message] {
            drop { }
        }
        grok {
            patterns_dir => "./patterns"
            break_on_match => false
            match => [
                "message", "%{EXIM_TIMESTAMP:ts}"
            ]
        }
        date {
            match => [
                "ts", "YYYY-MM-dd HH:mm:ss"
            ]
            remove_field => [ "ts" ]
        }
        grok {
            patterns_dir => "./patterns"
            match => [
                # Received message
                "message", "%{EXIM_QID:queue_id} <= %{NOTSPACE:sender} H=%{NOTSPACE:server}( \(%{NOTSPACE:helo}\))? \[%{IP:src_ip}\] P=%{NOTSPACE:protocol} S=%{NUMBER:size:int}( id=%{NOTSPACE:message_id})?",
                # Received bounce
                "message", "%{EXIM_QID:queue_id} <= <> R=%{NOTSPACE:bounced_id}",
                # Local delivery
                "message", "%{EXIM_QID:queue_id} [-=]> %{NOTSPACE:recipient} <%{NOTSPACE:orig_recipient}> R=%{WORD:router} T=%{WORD:transport}",
                # Remote delivery
                "message", "%{EXIM_QID:queue_id} [-=]> %{NOTSPACE:recipient} R=%{WORD:router} T=%{WORD:transport} H=%{NOTSPACE:server} \[%{IP:dst_ip}\]",
                # Defer
                "message", "%{EXIM_QID:queue_id} == %{NOTSPACE:recipient} R=%{WORD:router} T=%{WORD:transport} defer %{GREEDYDATA:defer}",
                # Error
                "message", "%{EXIM_QID:queue_id} \*\* %{NOTSPACE:recipient} R=%{WORD:router} T=%{WORD:transport}:? %{GREEDYDATA:error}",
                "message", "%{EXIM_QID:queue_id} \*\* %{NOTSPACE:recipient}: %{GREEDYDATA:error}",
                # Other message event (completed or frozen)
                "message", "%{EXIM_QID:queue_id} %{GREEDYDATA:event}",
                # All the rest
                "message", "%{EXIM_TIMESTAMP} %{GREEDYDATA:log_message}"
           ]
        }
        if [log_message] {
            mutate { replace => [ "message", "%{log_message}" ] }
            mutate { remove_field => [ "log_message" ] }
        } else {
            mutate { remove_field => [ "message" ] }
        }
    }
}
